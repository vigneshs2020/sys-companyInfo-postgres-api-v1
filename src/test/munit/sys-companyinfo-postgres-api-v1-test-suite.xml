<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="sys-companyinfo-postgres-api-v1-test-suite.xml" />
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-mainTest" doc:id="1c24b758-ff5c-4167-be19-4f1141878b64" description="Test" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="c8ec7cf1-4252-4e49-9ac8-f039fb5ef03e" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-main" doc:id="db396f86-fca8-4b16-9ee9-b57a92d91ff2" name="sys-companyinfo-postgres-api-v1-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="2017e6e7-e6f4-4132-9f12-ee774baee972" actual="#[vars.httpStatus]" expected="400"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-mainTest1" doc:id="50ced25a-d083-4dfc-902d-10fbbf560e5f" description="Test" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="01c9c4b6-0238-4f00-93ce-ce020cfc1e49" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-main" doc:id="e682392a-9e28-4474-a171-79762dafe751" name="sys-companyinfo-postgres-api-v1-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="1cefb3d4-6130-4dea-8546-f30362dc9d6b" actual="#[vars.httpStatus]" expected="404"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-mainTest2" doc:id="2b422bb9-5adf-4a2b-ac57-6b5143e64ab2" description="Test" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="aaafc8ff-ac53-40fa-835d-23d32f593b7d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-main" doc:id="2c575872-8705-4e8d-8ebc-2f89fa8947a6" name="sys-companyinfo-postgres-api-v1-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="b42c7985-e817-4704-8b80-b0980f986912" actual="#[vars.httpStatus]" expected="405"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-mainTest3" doc:id="e2ab19e3-5865-4204-8e1d-caf20021a621" description="Test" expectedErrorType="APIKIT:NOT_ACCEPTABLE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="2d2d7fdf-d8ad-44bb-a01b-c796d874f6dc" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-main" doc:id="34bf44e2-faf6-4089-a890-58071048ff6d" name="sys-companyinfo-postgres-api-v1-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="33585b6e-6ac1-4d26-8df5-95b01f02bb2e" actual="#[vars.httpStatus]" expected="406"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-mainTest4" doc:id="f885d577-0a77-46d9-b584-651206b7b71f" description="Test" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="f031715b-b8c1-49cf-9da9-36736b4ae931" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-main" doc:id="428a41b8-d356-442c-b8ae-3c20ebecc286" name="sys-companyinfo-postgres-api-v1-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="4866800b-fdf8-41d2-826e-ec91d6bde26b" actual="#[vars.httpStatus]" expected="415"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-mainTest5" doc:id="b2e1aec1-69c9-405b-b9fc-fed5c3714190" description="Test" expectedErrorType="APIKIT:NOT_IMPLEMENTED">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="2f3d3d0d-2213-4519-ba64-022e665bd4b5" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-main" doc:id="638307a0-deb4-44b7-9cdd-5405e370b8a5" name="sys-companyinfo-postgres-api-v1-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="c30f28dc-2603-4365-b25f-d86907cf54fe" actual="#[vars.httpStatus]" expected="501"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-get:\postgres\select:sys-companyinfo-postgres-api-v1-configTest" doc:id="162964c7-d8d9-476e-8081-4ec7c1d29c42" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="2d1f6e98-5729-48ba-876f-e6c83024f1de" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="58f7b0e2-cf51-499c-8133-ab5c656c677d" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;    {&#10;        "CompanyName": "Apisero",&#10;        "NoOfEmployees": 2000,&#10;        "InsurersList": [&#10;            "The New India Assurance Co. Ltd.",&#10;            "Bajaj Allianz Life Insurance Co. Ltd.",&#10;            "Star Health &amp; Allied Insurance Co Ltd"&#10;        ],&#10;        "Id": 1,&#10;        "InsuranceQuotation": {&#10;            "type": "jsonb",&#10;            "null": true,&#10;            "value": "[{\"insurerName\": \"The New India Assurance Co. Ltd.\", \"plansIncluded\": [{\"planType\": \"Floater\", \"coverAmount\": \"3L\", \"MemberCovered\": {\"Parents\": \"true\", \"ParentInLaws\": \"true\"}, \"PremiumAmountPerMember\": \"10500.00\"}, {\"planType\": \"TopUp\", \"coverAmount\": \"3L\", \"MemberCovered\": {\"Parents\": \"true\", \"ParentInLaws\": \"true\"}, \"PremiumAmountPerMember\": \"9000.00\"}, {\"planType\": \"TopUp\", \"coverAmount\": \"5L\", \"MemberCovered\": {\"Parents\": \"true\", \"ParentInLaws\": \"true\"}, \"PremiumAmountPerMember\": \"10000.00\"}, {\"planType\": \"TopUp\", \"coverAmount\": \"7L\", \"MemberCovered\": {\"Parents\": \"true\", \"ParentInLaws\": \"true\"}, \"PremiumAmountPerMember\": \"12000.00\"}, {\"planType\": \"Basic\", \"coverAmount\": \"3L\", \"MemberCovered\": {\"Parents\": \"false\", \"ParentInLaws\": \"false\"}, \"PremiumAmountPerMember\": \"500.00\"}], \"insurancePeriod\": \"1Y\", \"thirdPartyAdministrator\": \"MediAssit\"}, {\"insurerName\": \"Bajaj Allianz Life Insurance Co. Ltd.\", \"plansIncluded\": [{\"planType\": \"Accidental\", \"coverAmount\": \"5L\", \"MemberCovered\": {\"Parents\": \"false\", \"ParentInLaws\": \"false\"}, \"PremiumAmountPerMember\": \"500.00\"}], \"insurancePeriod\": \"1Y\", \"thirdPartyAdministrator\": \"MediAssist\"}, {\"insurerName\": \"Star Health &amp; Allied Insurance Co Ltd\", \"plansIncluded\": [{\"planType\": \"Basic\", \"coverAmount\": \"5L\", \"MemberCovered\": {\"Parents\": \"false\", \"ParentInLaws\": \"false\"}, \"PremiumAmountPerMember\": \"500.00\"}], \"insurancePeriod\": \"1Y\", \"thirdPartyAdministrator\": \"MediAssist\"}]"&#10;        }&#10;    }&#10;]]' />
					<munit-tools:attributes value="#[{ queryParams: { 'id' : 1}}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\postgres\select:sys-companyinfo-postgres-api-v1-config" doc:id="9d812eaa-58d9-4c7f-9580-41ef70a8fc8c" name="get:\postgres\select:sys-companyinfo-postgres-api-v1-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="350f1ece-ff4f-4c22-9e7f-ea15692bd8b0" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-post:\postgres\update:application\json:sys-companyinfo-postgres-api-v1-configTest" doc:id="7558047f-22de-4384-b413-4fb8ca965f1b" description="Test">
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="f727c56a-5e1a-4ad0-85b8-a36d1e574f04" >
				<munit:payload value='#[{"insurerName":"TheNewIndiaAssuranceCo.Ltd.","thirdPartyAdministrator":"MediAssit","insurancePeriod":"1Y","plansIncluded":[{"planType":"Floater","sumInsured":"3L","relationsCovered":{"Spouse":"true","Children":"true","Parents":"true","ParentInLaws":"true","All":"true"},"premiumAmountPerPerson":"10500.00"},{"planType":"TopUp","sumInsured":"3L","relationsCovered":{"Spouse":"true","Children":"true","Parents":"true","ParentInLaws":"true","All":"true"},"premiumAmountPerPerson":"9000.00"},{"planType":"TopUp","sumInsured":"5L","relationsCovered":{"Spouse":"true","Children":"true","Parents":"true","ParentInLaws":"true","All":"true"},"premiumAmountPerPerson":"10000.00"},{"planType":"TopUp","sumInsured":"7L","relationsCovered":{"Spouse":"true","Children":"true","Parents":"true","ParentInLaws":"true","All":"true"},"premiumAmountPerPerson":"12000.00"},{"planType":"Basic","sumInsured":"3L","relationsCovered":{"Spouse":"true","Children":"true","Parents":"false","ParentInLaws":"false","All":"false"},"premiumAmountPerPerson":"500.00"}]}]' />
				<munit:attributes value="#[{ queryParams: { 'id' : 1}}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\postgres\update:application\json:sys-companyinfo-postgres-api-v1-config" doc:id="511999ca-4802-43dc-b7b7-4a3d7bbcc468" name="post:\postgres\update:application\json:sys-companyinfo-postgres-api-v1-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="82b38f32-c881-4338-8d9f-f2869af29fef" expression="#[payload.message]" is="#[MunitTools::containsString('success')]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="sys-companyinfo-postgres-api-v1-test-suite-sys-companyinfo-postgres-api-v1-consoleTest" doc:id="8f351751-a187-4cf0-bfbe-9b014b17ce85" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="f5660a9b-b9e4-432b-9205-6eb87576e218" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-companyinfo-postgres-api-v1-console" doc:id="c5a30021-5ea5-4799-9150-886bc4267e7d" name="sys-companyinfo-postgres-api-v1-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="b843268e-2513-4bcc-b9ab-8409b8e4997e" processor="apikit:console" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sys-companyinfo-postgres-api-v1-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
